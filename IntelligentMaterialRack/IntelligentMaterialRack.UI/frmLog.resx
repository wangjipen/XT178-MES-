<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BT_ImportLog.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        GXhoxJ7oAAAAAElFTkSuQmCC
</value>
  </data>
</root>